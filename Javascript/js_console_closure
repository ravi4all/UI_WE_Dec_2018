function adder() {
	var x = 0;
	return x += 1;
}
undefined
adder()
1
adder()
1
adder()
1
function adder() {
	var x = 0;
	function inner(){
		return x += 1;
	}
}
undefined
add()
VM289:1 Uncaught ReferenceError: add is not defined
    at <anonymous>:1:1
(anonymous) @ VM289:1
adder()
undefined
adder()inner()
VM374:1 Uncaught SyntaxError: Unexpected identifier
function adder() {
	var x = 0;
	function inner(){
		return x += 1;
	}
	inner()
}
undefined
adder()
undefined
function adder() {
	var x = 0;
	function inner(){
		return x += 1;
	}
	console.log(inner());
}
undefined
adder()
VM461:6 1
undefined
adder()
VM461:6 1
undefined
function adder() {
	var x = 0;
	function inner(){
		return x += 1;
	}
	return inner
}
undefined
adder()
ƒ inner(){
		return x += 1;
	}
i = adder()
ƒ inner(){
		return x += 1;
	}
i()
1
i()
2
i()
3
i()
4
i()
5
function adder() {
	var x = 0;
	return function(){
		return x += 1;
	}
}
undefined
adder()
ƒ (){
		return x += 1;
	}
i = adder()
ƒ (){
		return x += 1;
	}
i()
1
i()
2
i()
3
navigator.geolocation.getCurrentPosition(function(pos){
	console.log(pos.coords.longitute + pos.coord.latitude);
})
VM918:1 [Deprecation] getCurrentPosition() and watchPosition() no longer work on insecure origins. To use this feature, you should consider switching your application to a secure origin, such as HTTPS. See https://goo.gl/rStTGz for more details.
(anonymous) @ VM918:1
undefined
function e(success){
	success();
}
undefined
e(12)
VM1033:2 Uncaught TypeError: success is not a function
    at e (<anonymous>:2:2)
    at <anonymous>:1:1
e @ VM1033:2
(anonymous) @ VM1075:1
e(adder)
undefined
navigator.getBattery
ƒ getBattery() { [native code] }
navigator.getBattery()
Promise {<pending>}__proto__: Promise[[PromiseStatus]]: "resolved"[[PromiseValue]]: BatteryManager
navigator.geolocation
Geolocation {}
navigator.geolocation.getCurrentPosition
ƒ getCurrentPosition() { [native code] }
var obj = {
	add : function(x,y){
		return x + y;
	},
	sub : function(x,y){
		return x - y;
	}
}
undefined
obj.add(2,3)
5
(function(x,y){
	return x + y;
})(4,5);
9
function adder() {
	var x = 0;
	function inner(){
		return x += 1;
	}
	return inner
}
undefined
function adder() {
	var x = 0;
	function inner_1(){
		return x += 1;
	}
	function inner_2() {
	}
}
undefined
function adder() {
	var x = 0;
	function inner_1(){
		return x += 1;
	}
	function inner_2() {
		return x -= 1;
	}
	return inner_1, inner_2;
}
undefined
adder()
ƒ inner_2() {
		return x -= 1;
	}
function adder() {
	var x = 0;
	function inner_1(){
		return x += 1;
	}
	function inner_2() {
		return x -= 1;
	}
	var f = [inner_1, inner_2]
	return f;
}
undefined
adder()
(2) [ƒ, ƒ]
adder()[0]()
1
adder()[0]()
1
adder()[0]()
1
